// Generated by CoffeeScript 1.6.2
(function() {
  angular.module('findTheBestApp', ['Facebook']).config([
    'FacebookProvider', function(FacebookProvider) {
      return FacebookProvider.init('163167117213822');
    }
  ]).factory('FakeFacebookService', [
    '$rootScope', function($rootScope) {
      var service;

      service = {
        loginIfNecessary: function() {
          return service.login();
        },
        login: function() {
          return service.applyBroadcastUser();
        },
        logout: function() {
          return $rootScope.$broadcast('FacebookService:noUser');
        },
        applyBroadcastUser: function() {
          var user;

          user = {
            id: '1359270259',
            name: 'Ferran May'
          };
          return $rootScope.$broadcast('FacebookService:me', user);
        }
      };
      service.applyBroadcastUser();
      return service;
    }
  ]).factory('FacebookService', [
    '$rootScope', 'Facebook', function($rootScope, Facebook) {
      var service;

      service = {
        login: function() {
          return Facebook.getLoginStatus(function(response) {
            if (response.status === 'connected') {
              return service.applyBroadcastUser();
            } else {
              return Facebook.login();
            }
          });
        },
        logout: function() {
          return Facebook.logout();
        },
        applyBroadcastUser: function() {
          return Facebook.api('/me', function(user) {
            console.log("Broadcasting user with name: " + user.name);
            return $rootScope.$apply(function() {
              return $rootScope.$broadcast('FacebookService:user', user);
            });
          });
        },
        applyBroadcastLogout: function() {
          console.log("Broadcasting logout");
          return $rootScope.$apply(function() {
            return $rootScope.$broadcast('FacebookService:noUser');
          });
        }
      };
      $rootScope.$on('Facebook:load', function() {
        console.log("Facebook loaded. Checking login status.");
        return Facebook.getLoginStatus(function(response) {
          if (response.status === 'connected') {
            console.log("User is already logged");
            return service.applyBroadcastUser();
          } else {
            console.log("User not logged");
            return service.applyBroadcastLogout();
          }
        });
      });
      $rootScope.$on('Facebook:login', function(ev, data) {
        if (data.status === 'connected') {
          console.log("User has logged in");
          return service.applyBroadcastUser();
        }
      });
      $rootScope.$on('Facebook:logout', function() {
        return service.applyBroadcastLogout();
      });
      return service;
    }
  ]).factory('FindTheBestApiService', [
    '$http', function($http) {
      var service;

      service = {
        registerUser: function(user, successCallback) {
          return $http.post('api/user', user).success(function(data, status, headers, config) {
            console.log("Login on server OK");
            return successCallback(data);
          }).error(function(data, status, headers, config) {
            console.log("Login on server ERROR");
            console.log(status);
            return console.log(data);
          });
        }
      };
      return service;
    }
  ]).controller('FindTheBestController', [
    '$scope', 'FacebookService', 'FindTheBestApiService', function($scope, FacebookService, ftbApi) {
      $scope.questions = [
        {
          text: 'Shawarma',
          place: 'Barcelona',
          answers: [
            {
              text: 'Sannin',
              points: 86,
              your_vote: 1
            }, {
              text: 'Urgarit',
              points: 56,
              your_vote: 1,
              url: 'http://www.ugarit.es'
            }, {
              text: 'Equinox',
              points: 48,
              your_vote: 1,
              url: 'http://www.equinoxverdi.com/'
            }, {
              text: 'Sundown',
              points: 13,
              your_vote: 0
            }, {
              text: 'Petra',
              points: 28,
              your_vote: -1
            }
          ]
        }, {
          text: 'Brand of mountain bikes',
          answers: [
            {
              text: 'Specialized',
              points: 235,
              your_vote: 0,
              url: 'http://www.specialized.com'
            }, {
              text: 'Giant',
              points: 186,
              your_vote: 0,
              url: 'http://www.giant-bicycles.com'
            }, {
              text: 'Cannondale',
              points: 146,
              your_vote: 0,
              url: 'http://www.cannondale.com'
            }, {
              text: 'Mondraker',
              points: 128,
              your_vote: 0,
              url: 'http://www.mondraker.com'
            }, {
              text: 'Lapierre',
              points: 107,
              your_vote: 0,
              url: 'http://lapierrebikes.com/'
            }
          ]
        }, {
          text: 'Pizza restaurant',
          place: 'Italy',
          answers: [
            {
              text: 'Pizzalia 1',
              points: 10,
              your_vote: 0
            }, {
              text: 'Pizzalia 2',
              points: 20,
              your_vote: 0
            }, {
              text: 'Pizzalia 3',
              points: 30,
              your_vote: 0
            }
          ]
        }
      ];
      $scope.user = null;
      $scope.login = function() {
        return FacebookService.login();
      };
      $scope.logout = function() {
        return FacebookService.logout();
      };
      $scope.$on('FacebookService:user', function(ev, fbUser) {
        var userToRegister;

        console.log("Facebook user detected: " + fbUser.name);
        userToRegister = {
          facebookId: fbUser.id,
          name: fbUser.name
        };
        return ftbApi.registerUser(userToRegister, function(userFromServer) {
          console.log("User successfully logged on facebook and registered on our API");
          return $scope.user = userFromServer;
        });
      });
      return $scope.$on('FacebookService:noUser', function() {
        console.log("Facebook user is gone");
        return $scope.user = {};
      });
    }
  ]);

}).call(this);
