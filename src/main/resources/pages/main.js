// Generated by CoffeeScript 1.6.2
(function() {
  angular.module('findTheBestApp', ['Facebook']).config([
    'FacebookProvider', '$httpProvider', function(FacebookProvider, $httpProvider) {
      FacebookProvider.init('163167117213822');
      return $httpProvider.responseInterceptors.push('errorLoggingInterceptor');
    }
  ]).factory('errorLoggingInterceptor', [
    '$log', '$q', function($log, $q) {
      return function(responsePromise) {
        return responsePromise.then(null, function(errResponse) {
          if (errResponse.status === 500) {
            $log.error('$http returned ' + errResponse.status + '. Data:');
            $log.error(errResponse.data);
          }
          return $q.reject(errResponse);
        });
      };
    }
  ]).factory('FakeFacebookService', [
    '$rootScope', function($rootScope) {
      var service;

      service = {
        loginIfNecessary: function() {
          return service.login();
        },
        login: function() {
          return service.applyBroadcastUser();
        },
        logout: function() {
          return $rootScope.$broadcast('FacebookService:noUser');
        },
        applyBroadcastUser: function() {
          var user;

          user = {
            id: '1359270259',
            name: 'Ferran May'
          };
          return $rootScope.$broadcast('FacebookService:user', user);
        }
      };
      service.applyBroadcastUser();
      return service;
    }
  ]).factory('FacebookService', [
    '$rootScope', '$log', 'Facebook', function($rootScope, $log, Facebook) {
      var service;

      service = {
        login: function() {
          return Facebook.getLoginStatus(function(response) {
            if (response.status === 'connected') {
              return service.applyBroadcastUser();
            } else {
              return Facebook.login();
            }
          });
        },
        logout: function() {
          return Facebook.logout();
        },
        applyBroadcastUser: function() {
          return Facebook.api('/me', function(user) {
            $log.info("Broadcasting user with name: " + user.name);
            return $rootScope.$apply(function() {
              return $rootScope.$broadcast('FacebookService:user', user);
            });
          });
        },
        applyBroadcastLogout: function() {
          $log.info("Broadcasting logout");
          return $rootScope.$apply(function() {
            return $rootScope.$broadcast('FacebookService:noUser');
          });
        }
      };
      $rootScope.$on('Facebook:load', function() {
        $log.info("Facebook loaded. Checking login status.");
        return Facebook.getLoginStatus(function(response) {
          if (response.status === 'connected') {
            $log.info("User is already logged");
            return service.applyBroadcastUser();
          } else {
            $log.info("User not logged");
            return service.applyBroadcastLogout();
          }
        });
      });
      $rootScope.$on('Facebook:login', function(ev, data) {
        if (data.status === 'connected') {
          $log.info("User has logged in");
          return service.applyBroadcastUser();
        }
      });
      $rootScope.$on('Facebook:logout', function() {
        return service.applyBroadcastLogout();
      });
      return service;
    }
  ]).factory('FindTheBestApiService', [
    '$http', '$log', function($http, $log) {
      var service;

      service = {
        registerUser: function(user, successCallback) {
          return $http.post('api/user', user).success(function(userCreated, status, headers, config) {
            $log.info("API: Register user OK");
            return successCallback(userCreated);
          });
        },
        createQuestion: function(question, successCallback) {
          return $http.post('api/question', question).success(function(questionCreated, status, headers, config) {
            $log.info("API: Question create OK");
            return successCallback(questionCreated);
          });
        },
        createAnswer: function(answer, successCallback) {
          return $http.post('api/answer', answer).success(function(answerCreated, status, headers, config) {
            $log.info("API: Answer create OK");
            return successCallback(answerCreated);
          });
        }
      };
      return service;
    }
  ]).controller('FindTheBestController', [
    '$scope', '$log', 'FacebookService', 'FindTheBestApiService', function($scope, $log, FacebookService, ftbApi) {
      $scope.questions = [
        {
          id: 0,
          message: 'Street headphones (id=0)',
          anwers: []
        }, {
          message: 'Shawarma',
          location: 'Barcelona',
          answers: [
            {
              text: 'Sannin',
              points: 86,
              yourVote: 1
            }, {
              text: 'Urgarit',
              points: 56,
              yourVote: 1,
              url: 'http://www.ugarit.es'
            }, {
              text: 'Equinox',
              points: 48,
              yourVote: 1,
              url: 'http://www.equinoxverdi.com/'
            }, {
              text: 'Sundown',
              points: 13,
              yourVote: 0
            }, {
              text: 'Petra',
              points: 28,
              yourVote: -1
            }
          ]
        }, {
          message: 'Brand of mountain bikes',
          answers: [
            {
              text: 'Specialized',
              points: 235,
              yourVote: 0,
              url: 'http://www.specialized.com'
            }, {
              text: 'Giant',
              points: 186,
              yourVote: 0,
              url: 'http://www.giant-bicycles.com'
            }, {
              text: 'Cannondale',
              points: 146,
              yourVote: 0,
              url: 'http://www.cannondale.com'
            }, {
              text: 'Mondraker',
              points: 128,
              yourVote: 0,
              url: 'http://www.mondraker.com'
            }, {
              text: 'Lapierre',
              points: 107,
              yourVote: 0,
              url: 'http://lapierrebikes.com/'
            }
          ]
        }, {
          message: 'Pizza restaurant',
          location: 'Italy',
          answers: [
            {
              text: 'Pizzalia 1',
              points: 10,
              yourVote: 0
            }, {
              text: 'Pizzalia 2',
              points: 20,
              yourVote: 0
            }, {
              text: 'Pizzalia 3',
              points: 30,
              yourVote: 0
            }
          ]
        }
      ];
      $scope.user = {
        logged: null
      };
      $scope.login = function() {
        return FacebookService.login();
      };
      $scope.logout = function() {
        return FacebookService.logout();
      };
      $scope.$on('FacebookService:user', function(ev, fbUser) {
        var userToRegister;

        $log.info("Facebook user detected: " + fbUser.name);
        userToRegister = {
          facebookId: fbUser.id,
          name: fbUser.name
        };
        return ftbApi.registerUser(userToRegister, function(userFromServer) {
          $log.info("User successfully logged on facebook and registered on our API");
          userFromServer.logged = true;
          return $scope.user = userFromServer;
        });
      });
      return $scope.$on('FacebookService:noUser', function() {
        $log.info("Facebook user is gone");
        return $scope.user = {
          logged: false
        };
      });
    }
  ]).controller('NewQuestionController', [
    '$scope', '$log', 'FindTheBestApiService', function($scope, $log, ftbApi) {
      $scope.question = {};
      return $scope.addQuestion = function() {
        $scope.question.creator = {
          id: $scope.user.id
        };
        $log.info($scope.question);
        return ftbApi.createQuestion($scope.question, function(questionCreated) {
          $log.info("Question created!");
          $log.info(questionCreated);
          return $scope.question = {};
        });
      };
    }
  ]).controller('QuestionsController', [
    '$scope', '$log', 'FindTheBestApiService', function($scope, $log, ftbApi) {
      return $scope.addNewAnswer = function(question) {
        var answer;

        answer = {
          text: question.newAnswer,
          creator: {
            id: $scope.user.id
          },
          question: {
            id: question.id
          }
        };
        $log.info(answer);
        return ftbApi.createAnswer(answer, function(answerCreated) {
          $log.info("Answer created!");
          $log.info(answerCreated);
          return question.newAnswer = "";
        });
      };
    }
  ]);

}).call(this);
